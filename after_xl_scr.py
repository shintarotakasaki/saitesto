# -*- coding: utf-8 -*-
"""after_xl_scr
Automatically generated by Colab.
Original file is located at
    https://colab.research.google.com/drive/1b3VXkHSUL8qaZE8LvrnmW17Nh3gh3TGN
"""

from openpyxl import load_workbook
import streamlit as st
from io import BytesIO
import requests
import shutil

# コメントアウトされたコード

def xl_data_upload(after_xl):
    values = []
    
    #after_xl = st.file_uploader("アフター申請書エクセルをアップロードしてください")

    if after_xl is not None:
        file_mime = after_xl.type
        if file_mime == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':
            try:
                file = BytesIO(after_xl.getvalue())
                wb = load_workbook(filename=file)
                sheet = wb.active
                rects = ["G19","G20","L15","N20","G21","N21","G23","Q23","H28","AB34"]

                for rect in rects:
                        
                    values.append(sheet[rect].value)

                for rect, value in zip(rects, values):
                    st.write(f"{rect}: {value}")
                
                return values

            except Exception as e:
                st.error(f"エラーが発生しました: {e}")
                return None

        else:
            st.write("エクセルファイル(.xlsx)をアップロードしてください")
            st.stop()

def afterxl_dataget ():
    """
    GitHubからExcelファイルをダウンロードし、開く関数。
    """
    values = ""
    xlpoints = ["AC9-1","AC9","AM9","AC11","AC13","AC15","AC19-1","AC19","A11","S11"]
    
    after_xl = st.file_uploader("アフター申請書エクセルをアップロードしてください")
    
    if after_xl is not None:
        values = xl_data_upload(after_xl)
    
    else:
        st.write("エクセルファイル(.xlsx)をアップロードしてください")
        st.stop()
    
    if values is not "":
        github_url = "https://github.com/shintarotakasaki/excel3/raw/main/伝票(規格品)_ラベル_指示書.xlsm"
        # ファイルをダウンロードして一時ファイルとして保存
        response = requests.get(github_url,stream=True)
        if response.status_code == 200:
            file_path = "伝票(規格品)_ラベル_指示書.xlsm"  # ここで file_path を定義
            with open("伝票(規格品)_ラベル_指示書.xlsm",'wb')as f:
                response.raw.decode_content = True
                shutil.copyfileobj(response.raw, f)
            
        try:
            wb_demp = load_workbook(file_path, keep_vba=True)
            ws_demp = wb_demp['納品書控(製品)']
            wb_demp.active = ws_demp

            # ここでwb_dempを使って処理を行う
            # Excelファイルへの書き込み

            syukka = st.date_input("出荷日を入力してください")
            konpou = st.selectbox("梱包数を選択してください",['1','2','3','4','5','それ以上'])
            if konpou =='それ以上':
                konpou = st.text_input('梱包数を入力してください(半角数字)')
            
            ws_demp["AH3"] = syukka
            ws_demp["AB4"] = konpou + "梱包"

            zig_tok = ""
            gen_1 = ""
            for xlpoint, value in zip(xlpoints, values):
                if xlpoint == "AC9-1":
                    zig_tok = value
                elif xlpoint == "AC9":
                    ws_demp[xlpoint] = str(zig_tok) + '-' + str(value)
                elif xlpoint == "AM9":
                    ws_demp[xlpoint] = str(value)[:4]
                elif xlpoint == "AC11":
                    ws_demp[xlpoint] = str(value) + "様"
                elif xlpoint == "AC13":
                    if value is None:
                        ws_demp[xlpoint] = "届け先："
                    else:
                        ws_demp[xlpoint] = "届け先：" + str(value)
                elif xlpoint == "AC15":
                    ws_demp[xlpoint] = str(value) + "様" if value else "=AC11"
                elif xlpoint == "AC19-1":
                    gen_1 = value
                elif xlpoint == "AC19":
                    ws_demp[xlpoint] = str(gen_1) +"/#"+ str(value)+"#"
                else:
                    ws_demp[xlpoint] = str(value)

            # 保存とダウンロード
            wb_demp.save(file_path)
            st.success("Excelファイルが上書き保存されました！")                

            #ファイルをダウンロード
            st.write("保存されたファイルを以下のリンクからダウンロードしてください:")
            with open(file_path, "rb") as file:
                st.download_button(
                    label="ダウンロードする",
                    data=file,
                    file_name="伝票(規格品)_ラベル_指示書.xlsm",
                    mime="application/vnd.ms-excel"
                )
            #wb_dempの処理終わり

        except Exception as e:  # 例外が発生した場合の処理
            st.error(f"エラーが発生しました: {str(e)}")

if __name__ == "__main__":
    afterxl_dataget()
# ... (他のコードは省略)
